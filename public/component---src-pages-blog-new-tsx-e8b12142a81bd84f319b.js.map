{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/blog/card.tsx","webpack://gatsby-starter-blog/./src/components/blog/cardgrid.tsx","webpack://gatsby-starter-blog/./src/pages/blog/new.tsx"],"names":["post","isNewsPost","newsOrBlog","className","Link","to","node","slug","itemProp","alt","image","title","src","file","url","updatedAt","category","map","key","author","posts","data","location","allContentfulPost","edges","React","isSelected","setIsSelected","length","blogOrNewsHeadingLetter","blogOrNewsTopPage"],"mappings":"+hHA8EA,IAzDK,SAAC,GAAD,YAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,WAAYC,EAArB,EAAqBA,WAArB,OACH,sBACE,eAAKC,UAAU,QAAf,QACE,uBACE,QAAC,EAAAC,KAAD,CAAMC,GAAI,IAAIH,EAAJ,IAAkBF,EAAKM,KAAKC,MAAU,EAAKC,SAAS,QAC5D,uBAEE,qBAEEC,IAAG,UAAET,EAAKM,KAAKI,aAAZ,aAAE,EAAiBC,MACtBC,IAAG,UAAEZ,EAAKM,KAAKI,aAAZ,iBAAE,EAAiBG,YAAnB,aAAE,EAAuBC,OAE9B,iCAIF,uBACE,oBAA4Bd,EAAKM,KAAKS,aAExC,uBACE,sBAEGd,IAAU,UACTD,EAAKM,KAAKU,gBADD,aACT,EAAoBC,KAAI,SAAAD,GAAQ,OAC9B,mBAEEE,IAAKF,GAEJA,SAIT,sBACE,sBAEER,SAAS,YAERR,aAJH,EAIGA,EAAMM,KAAKK,QAGfV,IACC,uBACE,qBAEEW,IAAG,IAAMZ,EAAKM,KAAKa,OAAhB,OACHV,IAAI,wBAEN,kCAA8CT,EAAKM,KAAKa,gB,stBC1BxE,IAnBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOnB,EAAV,EAAUA,WAAYC,EAAtB,EAAsBA,WAAtB,OACH,sBAEE,sBAEGkB,EAAMH,KAAI,SAAAjB,GAAI,OACb,QAAC,IAAD,CAEEE,WAAYA,EAEZD,WAAYA,EACZD,KAAMA,EACNkB,IAAKlB,aAAF,EAAEA,EAAMM,KAAKC,c,yGCK1B,UA7BiE,SAAC,GAAwB,IAAtBc,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClEF,EAAQC,EAAKE,kBAAkBC,MACrC,EAAoCC,WAAe,GAA5CC,EAAP,KAAmBC,EAAnB,KAEA,OAAqB,IAAjBP,EAAMQ,QAEN,QAAC,IAAD,CAAQN,SAAUA,EAAUO,wBAAyB,EAAGC,mBAAiB,IACvE,QAAC,IAAD,CAAKnB,MAAM,eACX,QAAC,IAAD,CAAMW,SAAUA,EAAUI,WAAYA,EAAYC,cAAeA,KACjE,gLASJ,QAAC,IAAD,CAAQL,SAAUA,EAAUO,wBAAyB,EAAGC,mBAAiB,IACvE,QAAC,IAAD,CAAKnB,MAAM,eACX,QAAC,IAAD,CAAMW,SAAUA,EAAUI,WAAYA,EAAYC,cAAeA,KACjE,oBAEE,QAAC,IAAD,CAAUP,MAAOA,EAAOlB,WAAW","file":"component---src-pages-blog-new-tsx-e8b12142a81bd84f319b.js","sourcesContent":["/* eslint-disable camelcase */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport { Link } from 'gatsby';\n\nimport 'twin.macro';\n\nconst Card: React.FC<{\n  post: {\n    node: {\n      contentslugful_id: string;\n      image: { title: string | undefined; file: { url: string | undefined } };\n      updatedAt: string;\n      category?: Array<string>;\n      title: string;\n      author?: string;\n      slug: string;\n    };\n  };\n  isNewsPost: boolean;\n  newsOrBlog: string;\n}> = ({ post, isNewsPost, newsOrBlog }) => (\n  <li tw=\"w-full\">\n    <div className=\"group\" tw=\"border-black mb-16 h-80 sm:h-72 md:h-80 lg:h-96\">\n      <div tw=\"group-hover:opacity-80 transition duration-300\">\n        <Link to={`/${newsOrBlog}/${post.node.slug}` || '/'} itemProp=\"url\">\n          <div tw=\"relative overflow-hidden rounded-xl\">\n            {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\n            <img\n              tw=\"w-full h-48 sm:h-48 lg:h-60 object-cover transform group-hover:scale-110 transition duration-300\"\n              alt={post.node.image?.title}\n              src={post.node.image?.file?.url}\n            />\n            <p tw=\"hidden group-hover:block bg-lightGreen bg-opacity-75 hover:bg-opacity-100 rounded-full px-5 py-2 absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-blue-50\">\n              Noteで読む\n            </p>\n          </div>\n          <div tw=\"my-2\">\n            <p tw=\"mb-0 text-gray-500\">{post.node.updatedAt}</p>\n          </div>\n          <div tw=\"px-2\">\n            <div tw=\"flex flex-wrap mb-1.5\">\n              {/* @ts-ignore */}\n              {isNewsPost ||\n                post.node.category?.map(category => (\n                  <p\n                    tw=\"mr-2 mb-0 px-2 text-sm rounded-full border-gray-400 border text-gray-500 font-bold\"\n                    key={category}\n                  >\n                    {category}\n                  </p>\n                ))}\n            </div>\n            <h6 tw=\"m-0\">\n              <span\n                tw=\"group-hover:text-lightGreen transition duration-300 text-lg font-extrabold\"\n                itemProp=\"headline\"\n              >\n                {post?.node.title}\n              </span>\n            </h6>\n            {isNewsPost || (\n              <div tw=\"flex items-center\">\n                <img\n                  tw=\"w-9 rounded-full mr-4\"\n                  src={`/${post.node.author}.png`}\n                  alt=\"{post.node.author}\"\n                />\n                <p tw=\"text-gray-700 m-0 text-xs\">Written By {post.node.author}</p>\n              </div>\n            )}\n          </div>\n        </Link>\n      </div>\n    </div>\n  </li>\n);\n\nexport default Card;\n","/* eslint-disable camelcase */\n/* eslint-disable react/destructuring-assignment */\n\nimport React from 'react';\nimport 'twin.macro';\nimport Card from './card';\n\nconst CardGrid: React.FC<{\n  posts?: {\n    readonly node: Pick<GatsbyTypes.ContentfulPost, 'title' | 'createdAt'> & {\n      author?: string;\n      category?: Array<string>;\n      slug?: string;\n    } & {\n      readonly image: GatsbyTypes.Maybe<\n        Pick<GatsbyTypes.ContentfulAsset, 'title'> & {\n          readonly file: GatsbyTypes.Maybe<Pick<GatsbyTypes.ContentfulAssetFile, 'url'>>;\n        }\n      >;\n    };\n  };\n  isNewsPost?: boolean;\n  newsOrBlog?: string;\n}> = ({ posts, isNewsPost, newsOrBlog }) => (\n  <ol tw=\"pb-80 md:pb-60 lg:pb-56 list-none mb-0\">\n    {/* cards from here */}\n    <div tw=\"grid md:grid-cols-2 lg:grid-cols-3 justify-items-center gap-5 sm:gap-12 lg:mx-32 mx-5 sm:mx-4 md:mx-28 xl:mx-56\">\n      {/* @ts-ignore */}\n      {posts.map(post => (\n        <Card\n          // @ts-ignore\n          newsOrBlog={newsOrBlog}\n          // @ts-ignore\n          isNewsPost={isNewsPost}\n          post={post}\n          key={post?.node.slug}\n        />\n      ))}\n    </div>\n  </ol>\n);\n\nexport default CardGrid;\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport * as React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport 'twin.macro';\n\nimport Menu from '../../components/blog/menu';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/blog/seo';\nimport CardGrid from '../../components/blog/cardgrid';\n\n// const BlogIndex = ({ data, location }) => {\nconst BlogIndex: React.FC<PageProps<GatsbyTypes.BlogNewQuery>> = ({ data, location }) => {\n  const posts = data.allContentfulPost.edges;\n  const [isSelected, setIsSelected] = React.useState(2);\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} blogOrNewsHeadingLetter={1} blogOrNewsTopPage>\n        <Seo title=\"New posts\" />\n        <Menu location={location} isSelected={isSelected} setIsSelected={setIsSelected} />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the directory you specified\n          for the \"gatsby-source-filesystem\" plugin in gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} blogOrNewsHeadingLetter={1} blogOrNewsTopPage>\n      <Seo title=\"New posts\" />\n      <Menu location={location} isSelected={isSelected} setIsSelected={setIsSelected} />\n      <div>\n        {/* @ts-ignore */}\n        <CardGrid posts={posts} newsOrBlog=\"blog\" />\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query BlogNew {\n    allContentfulPost(\n      filter: { node_locale: { eq: \"ja-JP\" } }\n      sort: { order: DESC, fields: updatedAt }\n    ) {\n      edges {\n        node {\n          title\n          category\n          author\n          slug\n          updatedAt(formatString: \"YYYY.MM.DD\")\n          image {\n            title\n            file {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}