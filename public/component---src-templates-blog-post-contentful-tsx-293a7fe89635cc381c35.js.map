{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/blog/card.tsx","webpack://gatsby-starter-blog/./src/components/blog/threeNewContents.tsx","webpack://gatsby-starter-blog/./src/templates/blog-post-contentful.tsx"],"names":["post","className","Link","to","node","slug","itemProp","image","alt","title","src","file","url","updatedAt","category","map","key","author","posts","useStaticQuery","allContentfulPost","edges","data","location","contentfulPost","mdPost","content","childMarkdownRemark","html","thumbnail","site","siteMetadata","siteUrl","blogOrNewsContentsPage","placeholder","createdAt","dangerouslySetInnerHTML","__html"],"mappings":"+xIAsFA,IAnEK,SAAC,GAAD,YAAGA,EAAH,EAAGA,KAAH,OACH,sBACE,eAAKC,UAAU,QAAf,QACE,uBACE,QAAC,EAAAC,KAAD,CAAMC,GAAI,SAASH,EAAKI,KAAKC,MAAU,EAAKC,SAAS,QACnD,sBACGN,EAAKI,KAAKG,OACT,yBAEE,qBAEEC,IAAG,UAAER,EAAKI,KAAKG,aAAZ,aAAE,EAAiBE,MACtBC,IAAG,UAAEV,EAAKI,KAAKG,aAAZ,iBAAE,EAAiBI,YAAnB,aAAE,EAAuBC,QAIhC,yBAEE,qBAEEJ,IAAI,2BACJE,IAAI,gCAKV,iCAIF,uBACE,oBAA4BV,EAAKI,KAAKS,aAExC,uBACE,gCACGb,EAAKI,KAAKU,gBADb,aACG,EAAoBC,KAAI,SAAAD,GAAQ,OAC/B,mBAEEE,IAAKF,GAEJA,QAIP,sBACE,sBAEER,SAAS,YAERN,aAJH,EAIGA,EAAMI,KAAKK,SAGhB,uBACE,qBAEEC,IAAG,IAAMV,EAAKI,KAAKa,OAAhB,OACHT,IAAI,wBAEN,kCAA8CR,EAAKI,KAAKa,gB,sXC7BtE,IAzCmC,WACjC,IA0BMC,GA1BOC,oBAAc,cA0BRC,kBAAkBC,MAErC,OACE,sBACE,sBACGH,EAAMH,KAAI,SAAAf,GAAI,OAEb,QAAC,IAAD,CAAMA,KAAMA,EAAMgB,IAAKhB,aAAF,EAAEA,EAAMI,KAAKC,c,8lGC8C5C,UA1EE,SAAC,GAAwB,IAAD,cAIN,IAJfiB,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACDvB,EAAOsB,EAAKE,eACZC,EAASH,SAAH,UAAGA,EAAME,sBAAT,iBAAG,EAAsBE,eAAzB,iBAAG,EAA+BC,2BAAlC,aAAG,EAAoDC,KAC/DC,EAAYP,SAAH,UAAGA,EAAME,sBAAT,iBAAG,EAAsBjB,aAAzB,iBAAG,EAA6BI,YAAhC,aAAG,EAAmCC,IAC9CiB,IAEHA,GADgBP,SAAH,UAAGA,EAAMQ,YAAT,iBAAG,EAAYC,oBAAf,aAAG,EAA0BC,SACjC,6BAGX,OACE,QAAC,IAAD,CAAQT,SAAUA,EAAUU,wBAAsB,IAChD,QAAC,IAAD,CAAKxB,OAAOT,aAAA,EAAAA,EAAMS,QAAS,YAAaF,MAAOsB,KAC/C,uBACE,uBACE,qBAGEnB,IAAKmB,EACLrB,IAAKqB,EACLK,YAAY,aAEd,sBAAmDlC,aAAnD,EAAmDA,EAAMS,QACzD,uBACE,qBAEEC,IAAG,KAAMV,aAAN,EAAMA,EAAMiB,QAAZ,OACHT,IAAI,wBAEN,oBACE,kCAA2DR,aAA3D,EAA2DA,EAAMiB,SAEhEjB,aAAA,EAAAA,EAAMmC,YAAYnC,aAAlB,EAAkBA,EAAMa,YACvB,uBACE,oBACGb,aADH,EACGA,EAAMmC,YAET,oBAAiDnC,aAAjD,EAAiDA,EAAMa,aAGzD,uBACE,oBAAiDb,aAAjD,EAAiDA,EAAMmC,gBAOjE,eAAKlC,UAAU,cAEb,eAAKmC,wBAAyB,CAAEC,OAAQZ,OAG1C,sBAEGzB,SAFH,UAEGA,EAAMc,gBAFT,aAEG,EAAgBC,KAAI,SAAAD,GAAQ,OAC3B,mBAEEE,IAAKF,GAEJA,SAKT,uBACE,gCACA,uBACE,QAAC,IAAD","file":"component---src-templates-blog-post-contentful-tsx-293a7fe89635cc381c35.js","sourcesContent":["/* eslint-disable camelcase */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport { Link } from 'gatsby';\n\nimport 'twin.macro';\n\nconst Card: React.FC<{\n  post: {\n    node: {\n      contentslugful_id: string;\n      image: { title: string | undefined; file: { url: string | undefined } };\n      updatedAt: string;\n      category?: Array<string>;\n      title: string;\n      author?: string;\n      slug: string;\n    };\n  };\n}> = ({ post }) => (\n  <li tw=\"w-full\">\n    <div className=\"group\" tw=\"border-black mb-28 h-80 sm:h-72 md:h-80 lg:h-96 box-content\">\n      <div tw=\"group-hover:opacity-80 transition duration-300\">\n        <Link to={`/blog/${post.node.slug}` || '/'} itemProp=\"url\">\n          <div tw=\"relative overflow-hidden rounded-xl\">\n            {post.node.image ? (\n              <>\n                {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\n                <img\n                  tw=\"w-full h-48 sm:h-48 lg:h-60 object-cover transform group-hover:scale-110 transition duration-300\"\n                  alt={post.node.image?.title}\n                  src={post.node.image?.file?.url}\n                />\n              </>\n            ) : (\n              <>\n                {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\n                <img\n                  tw=\"w-full h-48 sm:h-48 lg:h-60 object-cover transform group-hover:scale-110 transition duration-300\"\n                  alt=\"blog_alquimista_logo.jpg\"\n                  src=\"/blog_alquimista_logo.jpg\"\n                />\n              </>\n            )}\n\n            <p tw=\"hidden sm:group-hover:block bg-lightGreen bg-opacity-75 hover:bg-opacity-100 rounded-full px-5 py-2 absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-blue-50\">\n              Noteで読む\n            </p>\n          </div>\n          <div tw=\"my-2\">\n            <p tw=\"mb-0 text-gray-500\">{post.node.updatedAt}</p>\n          </div>\n          <div tw=\"px-2\">\n            <div tw=\"flex flex-wrap mb-1.5 gap-2\">\n              {post.node.category?.map(category => (\n                <p\n                  tw=\"mb-0 px-2 text-sm rounded-full border-gray-400 border text-gray-500 font-bold\"\n                  key={category}\n                >\n                  {category}\n                </p>\n              ))}\n            </div>\n            <h6 tw=\"m-0\">\n              <span\n                tw=\"group-hover:text-lightGreen transition duration-300 text-lg font-extrabold\"\n                itemProp=\"headline\"\n              >\n                {post?.node.title}\n              </span>\n            </h6>\n            <div tw=\"flex items-center\">\n              <img\n                tw=\"w-9 rounded-full mr-4\"\n                src={`/${post.node.author}.png`}\n                alt=\"{post.node.author}\"\n              />\n              <p tw=\"text-gray-700 m-0 text-xs\">Written By {post.node.author}</p>\n            </div>\n          </div>\n        </Link>\n      </div>\n    </div>\n  </li>\n);\n\nexport default Card;\n","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport 'twin.macro';\nimport Card from './card';\n\n// const BlogIndex = ({ data, location }) => {\nconst ThreeNewContents: React.FC = () => {\n  const data = useStaticQuery<GatsbyTypes.ThreeNewContentsQuery>(graphql`\n    query ThreeNewContents {\n      allContentfulPost(\n        filter: { node_locale: { eq: \"ja-JP\" } }\n        sort: { order: DESC, fields: updatedAt }\n        limit: 3\n      ) {\n        edges {\n          node {\n            title\n            category\n            author\n            slug\n            updatedAt(formatString: \"YYYY.MM.DD\")\n            image {\n              title\n              file {\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const posts = data.allContentfulPost.edges;\n  // @ts-ignore\n  return (\n    <ol tw=\"list-none mb-0 \">\n      <div tw=\"text-left grid sm:grid-cols-2 md:grid-cols-3 gap-1.5 sm:gap-12\">\n        {posts.map(post => (\n          // @ts-ignore\n          <Card post={post} key={post?.node.slug} />\n        ))}\n      </div>\n    </ol>\n  );\n};\n\nexport default ThreeNewContents;\n","/* eslint-disable jsx-a11y/img-redundant-alt */\n/* eslint-disable react/display-name */\n/* eslint-disable react/destructuring-assignment */\nimport * as React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport 'twin.macro';\n\nimport Layout from '../components/layout';\nimport ThreeNewContents from '../components/blog/threeNewContents';\nimport SEO from '../components/blog/seo';\n\nconst BlogPostContentfulTemplate: React.FC<PageProps<GatsbyTypes.ContentfulBlogPostBySlugQuery>> =\n  ({ data, location }) => {\n    const post = data.contentfulPost;\n    const mdPost = data?.contentfulPost?.content?.childMarkdownRemark?.html;\n    let thumbnail = data?.contentfulPost?.image?.file?.url;\n    if (!thumbnail) {\n      const siteUrl = data?.site?.siteMetadata?.siteUrl;\n      thumbnail = `${siteUrl}/blog_alquimista_logo.jpg`;\n    }\n\n    return (\n      <Layout location={location} blogOrNewsContentsPage>\n        <SEO title={post?.title || 'undefined'} image={thumbnail} />\n        <div tw=\" mx-5 sm:mx-14 md:mx-28 lg:mx-52 xl:mx-96\">\n          <div tw=\"my-16\">\n            <img\n              tw=\"w-full md:h-72 lg:h-96 object-cover\"\n              // @ts-ignore\n              src={thumbnail}\n              alt={thumbnail}\n              placeholder=\"blurred\"\n            />\n            <div tw=\"text-xl sm:text-3xl font-bold pt-8 pb-8\">{post?.title}</div>\n            <div tw=\"flex gap-3 items-center\">\n              <img\n                tw=\"w-10 h-10 sm:w-12 sm:h-12 rounded-full mr-4\"\n                src={`/${post?.author}.png`}\n                alt=\"{post.node.author}\"\n              />\n              <div>\n                <p tw=\"text-sm sm:text-base text-gray-700 m-0\">Written By {post?.author}</p>\n                {/* @ts-ignore */}\n                {post?.createdAt < post?.updatedAt ? (\n                  <div tw=\"my-2\">\n                    <p tw=\"line-through text-sm sm:text-base text-gray-500 mb-0\">\n                      {post?.createdAt}\n                    </p>\n                    <p tw=\"text-sm sm:text-base text-gray-500 mb-0\">{post?.updatedAt}</p>\n                  </div>\n                ) : (\n                  <div tw=\"my-2\">\n                    <p tw=\"text-sm sm:text-base text-gray-500 mb-0\">{post?.createdAt}</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"post-body\">\n            {/* @ts-ignore */}\n            <div dangerouslySetInnerHTML={{ __html: mdPost }} />\n          </div>\n\n          <div tw=\"flex flex-wrap mb-1.5\">\n            {/* @ts-ignore */}\n            {post?.category?.map(category => (\n              <p\n                tw=\"mr-2 mb-0 px-2 text-sm rounded-full border-gray-400 border text-gray-500 font-bold\"\n                key={category}\n              >\n                {category}\n              </p>\n            ))}\n          </div>\n        </div>\n        <div tw=\"mx-5 mt-3 sm:mt-16 sm:mx-10 md:mx-14 lg:mx-32\">\n          <p tw=\"pt-7 border-t border-gray-400 text-center md:text-2xl font-bold\">おすすめの記事</p>\n          <div tw=\"pb-80 md:pb-60 lg:pb-56 \">\n            <ThreeNewContents />\n          </div>\n        </div>\n      </Layout>\n    );\n  };\n\nexport default BlogPostContentfulTemplate;\n\nexport const pageQuery = graphql`\n  query ContentfulBlogPostBySlug($slug: String!) {\n    contentfulPost(slug: { eq: $slug }) {\n      title\n      author\n      createdAt(formatString: \"YYYY/MM/DD HH:mm:ss\")\n      updatedAt(formatString: \"YYYY/MM/DD HH:mm:ss\")\n      category\n      slug\n      content {\n        childMarkdownRemark {\n          html\n        }\n      }\n      image {\n        gatsbyImageData\n        file {\n          url\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}